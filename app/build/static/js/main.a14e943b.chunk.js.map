{"version":3,"sources":["assets/img/branding.jpg","components/Navbar.js","components/CardHeader.js","services/administraciones.js","services/timeAgo.js","components/Monitores.js","pages/Dashboard.js","routes/Routes.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","menuButton","marginRight","title","imagen","borderRadius","Navbar","props","classes","className","AppBar","position","Toolbar","IconButton","edge","color","Typography","variant","src","Logo","width","height","alt","CarsHeader","textAlign","background","texto","fontSize","font","titulo","fontWeight","Card","CardContent","icono","baseUrl","getMonitors","a","request","axios","get","concat","then","response","data","getAll","require","getTareas","tareas","getEstadisticas","DATE_UNITS","day","hour","minute","second","timeAgoToMinutes","timeAgo","value","unit","timestamp","getTimeAgo","rtf","Intl","RelativeTimeFormat","secondsElapsed","Object","entries","secondsInUnit","Math","floor","getUnitAndValueDate","Date","now","getSecondsDiff","description","format","abs","container","maxHeight","table","minWidth","tableHead","border","chip","StyledTableCell","withStyles","theme","padding","boxShadow","TableCell","Monitores","useState","monitors","setMonitors","tasks","setTasks","page","setPage","rowsPerPage","setRowsPerPage","queryByAdmin","setQueryByAdmin","useEffect","administacionService","result","handleChangePage","event","newPage","handleChangeRowsPerPage","target","handleChangeQueryByAdmin","length","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TextField","label","onChange","map","task","style","nombreVisual","toUpperCase","TableBody","filteredMonitors","filter","x","detalle","toLowerCase","includes","slice","administracion","index","tarea","idx","timeAgoTask","ultimaEjecucion","backgroundColor","taskConfig","find","config","nombreAda4","nombre","undefined","semaforo","activa","intermedia","getLabelAndStyle","Chip","size","id","renderBody","TablePagination","rowsPerPageOptions","component","count","onChangePage","onChangeRowsPerPage","iconos","paddingTop","alignItems","containerGrafica","marginTop","containerTabla","Dashboard","statistics","setStatistics","administraciones","Grid","spacing","item","xs","sm","lg","xl","total_administraciones","total_nube","total_servicio_activo","App","path","ReactDOM","render","StrictMode","Routes","document","getElementById"],"mappings":"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","file":"static/js/main.a14e943b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/branding.9d25b671.jpg\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Logo from '../assets/img/branding.jpg'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: '16px'\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  imagen: {\r\n    borderRadius: '50%'\r\n  }\r\n}))\r\n\r\nfunction Navbar (props) {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton edge='start' className={classes.menuButton} color='inherit'>\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant='h6' className={classes.title}>\r\n            Informacion ADA4D\r\n          </Typography>\r\n\r\n          <IconButton color='inherit'>\r\n            <img src={Logo} width='40px' height='40px' alt='' className={classes.imagen} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\n","import { Card, Typography, CardContent } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst CarsHeader = (props) => {\n  const useStyles = makeStyles(() => ({\r\n    root: {\r\n      textAlign: 'center',\r\n      background: props.color\r\n    },\r\n    texto: {\r\n      fontSize: 18,\r\n      color: props.font\r\n    },\r\n    titulo: {\r\n      fontWeight: 'bold',\r\n      fontSize: 22,\r\n      color: props.font\r\n    }\r\n  }))\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        {props.icono}\r\n        <Typography className={classes.titulo}>\r\n          {props.titulo}\r\n        </Typography>\r\n\r\n        <Typography className={classes.texto}>\r\n          {props.texto}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CarsHeader\n","import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3005/api'\r\n\r\n// let token = null\r\n\r\n// const setToken = newToken => {\r\n//   token = `Bearer ${newToken}`\r\n// }\r\n\r\nconst getMonitors = async () => {\r\n  const request = axios.get(baseUrl.concat('/monitores'))\r\n\r\n  return request.then(response => response.data)\r\n\r\n  //   const monitors = []\r\n  //   const tasks = await getTareas()\r\n  //   const administrations = await getAll()\r\n\r\n  //   administrations.administraciones.forEach((admin, index) => {\r\n\r\n  //     const adminCopy = {...admin}\r\n\r\n  //     monitors.push(adminCopy)\r\n  //     monitors[index].tareas = []\r\n\r\n  //     tasks.forEach(task => {\r\n\r\n  //       let monitor = admin.tareas.find(element => {\r\n  //         return (element.nombre === task.nombreAda4)\r\n  //       })\r\n\r\n  //       if (monitor) {\r\n  //         monitors[index].tareas.push(monitor)\r\n  //       } else {\r\n  //         monitors[index].tareas.push(createEmptyMonitor())\r\n  //       }\r\n\r\n  //     })\r\n\r\n  //   });\r\n\r\n//   return monitors\r\n}\r\n\r\n// function createEmptyMonitor() {\r\n//   return {\r\n//     nombre: \"N/A\",\r\n//     activa: false,\r\n//     descripcion: \"N/A\",\r\n//     intervalo: 10,\r\n//     ultimaEjecucion: \"2001-01-01T01:01:01.001Z\"\r\n//   }\r\n// }\r\n\r\nconst getAll = async () => {\r\n  const data = await require('../db-administraciones.json')\r\n\r\n  return data\r\n}\r\n\r\nconst getTareas = async () => {\r\n  const tareas = await require('../db-tareas.json')\r\n\r\n  return tareas.tareas\r\n}\r\n\r\nconst getEstadisticas = async () => {\r\n  const request = axios.get(baseUrl.concat('/estadisticas'))\r\n\r\n  return request.then(response => response.data)\r\n  //   const estadisticas = await require('../db-estadisticas.json')\r\n\r\n//   return estadisticas.estadisticas\r\n}\r\n// const create = (newObject) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: token\r\n//     }\r\n//   }\r\n\r\n//   const request = axios.post(baseUrl, newObject, config)\r\n//   return request.then(response => response.data)\r\n// }\r\n\r\n// const update = (id, newObject) => {\r\n//   const config = {\r\n//     headers: {\r\n//       Authorization: token\r\n//     }\r\n//   }\r\n\r\n//   const request = axios.put(`${baseUrl}/${id}`, newObject, config)\r\n//   return request.then(response => response.data)\r\n// }\r\n\r\nexport default { getAll, getTareas, getMonitors, getEstadisticas }\r\n","const DATE_UNITS = {\r\n  day: 86400,\r\n  hour: 3600,\r\n  minute: 60,\r\n  second: 1\r\n}\r\n\r\nconst getSecondsDiff = timestamp => (Date.now() - timestamp) / 1000\r\n\r\nconst getUnitAndValueDate = (secondsElapsed) => {\r\n  for (const [unit, secondsInUnit] of Object.entries(DATE_UNITS)) {\r\n    if (secondsElapsed >= secondsInUnit || unit === 'second') {\r\n      const value = Math.floor(secondsElapsed / secondsInUnit) * -1\r\n      return { value, unit }\r\n    }\r\n  }\r\n}\r\n\r\nconst getTimeAgo = timestamp => {\r\n  let timeAgo = {\r\n    unit: '',\r\n    value: 0,\r\n    getTimeAgo: ''\r\n  }\r\n\r\n  const rtf = new Intl.RelativeTimeFormat()\r\n\r\n  const secondsElapsed = getSecondsDiff(timestamp)\r\n\r\n  const { value, unit } = getUnitAndValueDate(secondsElapsed)\r\n\r\n  timeAgo = {\r\n    unit,\r\n    value, // Siempre lo retorno en minutos\r\n    description: rtf.format(value, unit)\r\n  }\r\n\r\n  timeAgoToMinutes(timeAgo)\r\n\r\n  timeAgo.value = Math.abs(timeAgo.value)\r\n\r\n  // return rtf.format(value, unit)\r\n  return timeAgo\r\n}\r\n\r\nconst timeAgoToMinutes = (timeAgo) => {\r\n  const TIME_AGO_TO_MINUTES = {\r\n    day: (timeAgo) => { return (timeAgo.value * 24) * 60 },\r\n    hour: (timeAgo) => { return (timeAgo.value * 60) },\r\n    second: (timeAgo) => { return (timeAgo.value = 10) }\r\n  }\r\n\r\n  const timeAgoToMinutes = TIME_AGO_TO_MINUTES[timeAgo.unit]\r\n\r\n  if (timeAgoToMinutes) {\r\n    timeAgo.value = timeAgoToMinutes(timeAgo)\r\n  }\r\n}\r\n\r\nexport default { getTimeAgo }\r\n","import { useState, useEffect } from 'react'\r\nimport { Table, TableContainer, TableHead, TableCell, TableBody, TableRow } from '@material-ui/core'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport administacionService from '../services/administraciones'\r\nimport timeAgo from '../services/timeAgo'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%'\r\n  },\r\n  container: {\r\n    maxHeight: 440\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  tableHead: {\r\n    // backgroundColor: 'gray',\r\n    color: 'rgb(199 76 17 / 87%)',\r\n    border: '5'\r\n  },\r\n  chip: {\r\n    color: 'green'\r\n  }\r\n})\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  root: {\r\n    padding: '0px 0px',\r\n    borderRadius: 6,\r\n    textAlign: 'center',\r\n    boxShadow: '0 2px 5px 2px rgba(255, 105, 135, .3)',\r\n    // transition: 'transform .2s',\r\n    '&:hover': {\r\n      // transform: 'scale(1.05)'\r\n      border: '1px solid'\r\n    }\r\n  }\r\n}))(TableCell)\r\n\r\nconst Monitores = () => {\r\n  const [monitors, setMonitors] = useState([])\r\n  const [tasks, setTasks] = useState([])\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [queryByAdmin, setQueryByAdmin] = useState('')\r\n\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    administacionService\r\n      .getTareas()\r\n      .then(result => {\r\n        setTasks(result)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    administacionService\r\n      .getMonitors()\r\n      .then(result => {\r\n        setMonitors(result)\r\n      })\r\n  }, [])\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value)\r\n    setPage(0)\r\n  }\r\n\r\n  const handleChangeQueryByAdmin = (event) => {\r\n    setQueryByAdmin(event.target.value)\r\n  }\r\n\r\n  if (!monitors.length === 0) return\r\n\r\n  const renderFilterAdmin = () => {\r\n    return (\n      <TextField\r\n        className='filtrarAdmin'\r\n        label='Filtrar Admin'\r\n        value={queryByAdmin}\r\n        onChange={handleChangeQueryByAdmin}\n      />\n    )\r\n  }\r\n\r\n  const getLabelAndStyle = (task, timeAgoTask) => {\r\n    let label = 'No Conf.'\r\n    let style = { backgroundColor: 'fushsia', color: 'black' }\r\n\r\n    const styleActiva = { backgroundColor: 'green', color: 'white' }\r\n    const styleReciente = { backgroundColor: 'yellow', color: 'black' }\r\n    const styleApagada = { backgroundColor: 'red', color: 'white' }\r\n\r\n    //  Configuracion de Tarea por nuestra parte (en el monitoresWeb)\r\n    // {\r\n    //     \"nombreAda4\": \"SERVICIO_SYNC_PERFIT\",\r\n    //         \"nombreVisual\": \"perfit\",\r\n    //             \"intervalo\": 10,\r\n    //                 \"semaforo\": {\r\n    //                               \"activa\": 60,\r\n    //                               \"intermedia\": 5760,\r\n    //                               \"apagada\": 5761\r\n    //     }\r\n    // }\r\n\r\n    const taskConfig = tasks.find(config => config.nombreAda4 === task.nombre)\r\n\r\n    if (!taskConfig) return { label, style }\r\n    if (taskConfig.semaforo === undefined) return { label, style }\r\n\r\n    if (timeAgoTask.value <= taskConfig.semaforo.activa) {\r\n      label = 'Activa'\r\n      style = styleActiva\r\n\r\n      return { label, style }\r\n    }\r\n\r\n    if (timeAgoTask.value <= taskConfig.semaforo.intermedia) {\r\n      label = 'Reciente'\r\n      style = styleReciente\r\n\r\n      return { label, style }\r\n    }\r\n\r\n    label = 'Apagada'\r\n    style = styleApagada\r\n\r\n    return { label, style }\r\n  }\r\n\r\n  const renderBody = () => {\r\n    const filteredMonitors = queryByAdmin\r\n      ? monitors.filter(x => x.detalle.toLowerCase().includes(queryByAdmin.toLowerCase()))\r\n      : monitors\r\n\r\n    return filteredMonitors && filteredMonitors.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((administracion, index) => {\r\n      return (\r\n        <TableRow key={administracion.id}>\r\n\r\n          <TableCell key={index}>\r\n            {administracion.detalle}\r\n\r\n          </TableCell>\r\n          {\r\n                        administracion.tareas.map((tarea, idx) => {\n                          const timeAgoTask = timeAgo.getTimeAgo(new Date(tarea.ultimaEjecucion))\r\n                          const { label, style } = getLabelAndStyle(tarea, timeAgoTask)\r\n\r\n                          return (\r\n                            <StyledTableCell key={`${index}_${idx}`}>\r\n                              {timeAgoTask.description}\r\n                              <div>\r\n                                <Chip\n                                  size='small'\r\n                                  label={label}\r\n                                  style={style}\n                                />\r\n                              </div>\r\n                            </StyledTableCell>\r\n                          )\r\n                        })\r\n                    }\r\n        </TableRow>\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderTablePagination = () => {\r\n    return (\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component='div'\r\n        count={monitors.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    )\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label='sticky table'>\r\n          <TableHead className={classes.tableHead}>\r\n\r\n            <TableRow>\r\n              {renderFilterAdmin()}\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell key='adm'>ADMINISTRACION</TableCell>\r\n              {tasks && tasks.map(task => (\r\n                <TableCell key={task.nombreVisual} style={{ color: 'green', textAlign: 'center' }}>{task.nombreVisual.toUpperCase()}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {renderBody()}\r\n          </TableBody>\r\n\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {renderTablePagination()}\r\n\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Monitores\n","import { useState, useEffect } from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Navbar from '../components/Navbar'\r\nimport CardsHeader from '../components/CardHeader'\r\n// import Card from '../components/Card'\r\n// import Graphic from '../components/Graphic'\r\nimport Monitores from '../components/Monitores'\r\n\r\nimport 'fontsource-roboto'\r\nimport '../assets/css/Dashboard.css'\r\n\r\nimport YouTubeIcon from '@material-ui/icons/YouTube'\r\nimport PublicIcon from '@material-ui/icons/Public'\r\nimport VideocamIcon from '@material-ui/icons/Videocam'\r\nimport administraciones from '../services/administraciones'\r\n// import Table from '../components/Table';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  iconos: {\r\n    color: 'red'\r\n  },\r\n  container: {\r\n    paddingTop: '40px',\r\n    alignItems: 'center'\r\n  },\r\n  containerGrafica: {\r\n    marginTop: '40px'\r\n  },\r\n  containerTabla: {\r\n    marginTop: '40px'\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\n// const data = [\r\n//     {\r\n//       id:1,\r\n//       video:\r\n//         \"Como Hacer un Split en React JS || React Split Pane || Tutorial en Español (2020)\",\r\n//       fecha: \"6 de sep. 2020\",\r\n//       visualizaciones: 32,\r\n//       imagen: require(\"../assets/img/split.webp\"),\r\n//     },\r\n//     {\r\n//       id:2,\r\n//         video:\r\n//           \"Cómo Solucionar Error al Crear Applicación de React JS\",\r\n//         fecha: \"5 de sep. 2020\",\r\n//         visualizaciones: 31,\r\n//         imagen: require(\"../assets/img/error.webp\"),\r\n//       },\r\n//       {\r\n//       id:3,\r\n//         video:\r\n//           \"Cómo Utilizar Forever en Node JS || Ejecutar Node JS en Segundo Plano || Background Node JS\",\r\n//         fecha: \"4 de sep. 2020\",\r\n//         visualizaciones: 21,\r\n//         imagen: require(\"../assets/img/forever.webp\"),\r\n//       },\r\n//   ];\r\n\r\nconst Dashboard = () => {\r\n  const [statistics, setStatistics] = useState({})\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    administraciones\r\n      .getEstadisticas()\r\n      .then(result => {\r\n        setStatistics(result)\r\n      })\r\n  }, [])\r\n  return (\r\n  // <div className={classes.root}>\r\n    <div>\r\n      <Grid container spacing={3}>\r\n\r\n        <Grid item xs={12}>\r\n          <Navbar />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} lg={4} xl={4}>\r\n          <CardsHeader icono={<YouTubeIcon className={classes.iconos} />} titulo='ADMINISTRACIONES' texto={statistics.total_administraciones} color='rgba(248,80,50,1)' font='black' />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} lg={4} xl={4}>\r\n          <CardsHeader icono={<PublicIcon className={classes.iconos} />} titulo='NUBE' texto={statistics.total_nube} color='rgba(248,80,50,1)' font='black' />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} lg={4} xl={4}>\r\n          <CardsHeader icono={<VideocamIcon className={classes.iconos} />} titulo='SERVICIO ACTIVO' texto={statistics.total_servicio_activo} color='rgba(248,80,50,1)' font='black' />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.containerTabla}>\r\n          <Monitores />\r\n        </Grid>\r\n        {/*\r\n                <Grid item container spacing={1} className={classes.container} xs={12} sm={12} md={6} lg={6} xl={6} >\r\n                    <Grid item xs={12} sm={6} md={6} lg={6} xl={6} >\r\n                        <Card titulo='SUSCRIPCIONES' texto='692' />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6} lg={6} xl={6} >\r\n                        <Card titulo='VISUALIZACIONES' texto='111,092' />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6} lg={6} xl={6} >\r\n                        <Card titulo='TIEMPO VISUALICION' texto='2,504 horas' />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} md={6} lg={6} xl={6} >\r\n                        <Card titulo='PORCENTAJE IMPRESIONES' texto='14,2%' />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={12} md={1} lg={1} xl={1} ></Grid>\r\n\r\n                <Grid item xs={12} sm={12} md={5} lg={5} xl={5} className={classes.containerGrafica} >\r\n                    <Graphic />\r\n                </Grid> */}\r\n\r\n        {/* <Grid item xs={12} className={classes.containerTabla}>\r\n                    <Table data={data}/>\r\n                </Grid> */}\r\n\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Dashboard from '../pages/Dashboard'\r\n\r\nfunction App () {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path='/' component={Dashboard} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Routes from './routes/Routes'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}